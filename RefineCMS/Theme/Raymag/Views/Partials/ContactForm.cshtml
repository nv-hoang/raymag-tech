@{
    var form = new RefineCMS.Theme.Raymag.Classes.ContactForm(output);

    var FormData = TempData["FormData"];
    if (FormData != null)
    {
        form.SetData(FormData.ToString()!);
    }

    form.Find("Info.ActionUrl")!.SetValue(output.Url(PropertyGetter.GetValue<string>(page.PostInstance!, "PostName")!));
    form.Find("Info.PageTemplate")!.SetValue(PropertyGetter.GetValue(page.PostInstance!, "PostTemplate")!);

    Func<string, string> errorMessage = (string field) =>
    {
        field = field.Replace(".", "?.");
        return $@"<div style=""position: relative;""><div x-show=""errors?.{field} ?? false"" class=""text-[16px] lg:text-[15px] font-light leading-150 lg:leading-140"" style=""color: red; display: none; position: absolute; top: 0px; left: 0px; pointer-events: none;"">{output.Trans("This field is required.")}</div></div>";
        //if (FormData != null && form.Find(field)!.IsValid(form) == false)
        //{
        //}
        //return "";
    };
}



<div>


    <form id="frmContact" data-action="@Url.Action("ContactFormSubmit", "Api")" x-data="frmdata" x-on:submit.prevent="dosubmit()" data-formfields="@Html.Raw(Convert.ToBase64String(System.Text.Encoding.UTF8.GetBytes(JsonConvert.SerializeObject(form.GetData()))))">
        <div style="display: none;">
            @Html.AntiForgeryToken()
            <textarea name="FormData" x-text="JSON.stringify(formdata)"></textarea>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-y-0 gap-x-8">
            <div class="mb-4 form-field">
                <div class="text-[16px] lg:text-[18px] font-normal leading-140 mb-2 lg:mb-[6px]">@output.Trans("First Name") <sup class="text-primary-500" style="font-size: 100% !important; top: -2px !important;">*</sup></div>
                <input type="text" x-model="formdata.Info.FirstName" required placeholder="@output.Trans("First Name")" class="w-full outline-none rounded-[10px] lg:rounded-[8px] border-[1.5px] border-grey-200 px-5 py-3 lg:px-[15px] lg:py-[10px] text-[16px] lg:text-[15px] font-light leading-150 lg:leading-140 h-[48px] lg:h-[41px]">
                @Html.Raw(errorMessage("Info.FirstName"))
            </div>
            <div class="mb-4 form-field">
                <div class="text-[16px] lg:text-[18px] font-normal leading-140 mb-2 lg:mb-[6px]">@output.Trans("Last Name") <sup class="text-primary-500" style="font-size: 100% !important; top: -2px !important;">*</sup></div>
                <input type="text" x-model="formdata.Info.LastName" required placeholder="@output.Trans("Last Name")" class="w-full outline-none rounded-[10px] lg:rounded-[8px] border-[1.5px] border-grey-200 px-5 py-3 lg:px-[15px] lg:py-[10px] text-[16px] lg:text-[15px] font-light leading-150 lg:leading-140 h-[48px] lg:h-[41px]">
                @Html.Raw(errorMessage("Info.LastName"))
            </div>
        </div>

        <div class="mb-4 form-field">
            <div class="text-[16px] lg:text-[18px] font-normal leading-140 mb-2 lg:mb-[6px]">@output.Trans("E-mail") <sup class="text-primary-500" style="font-size: 100% !important; top: -2px !important;">*</sup></div>
            <input type="email" x-model="formdata.Info.Email" required placeholder="@output.Trans("E-mail")" class="w-full outline-none rounded-[10px] lg:rounded-[8px] border-[1.5px] border-grey-200 px-5 py-3 lg:px-[15px] lg:py-[10px] text-[16px] lg:text-[15px] font-light leading-150 lg:leading-140 h-[48px] lg:h-[41px]">
            @Html.Raw(errorMessage("Info.Email"))
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-y-0 gap-x-8">
            <div class="mb-4 form-field">
                <div class="text-[16px] lg:text-[18px] font-normal leading-140 mb-2 lg:mb-[6px]">@output.Trans("Phone Number")</div>
                <input type="text" x-model="formdata.Info.Phone" placeholder="@output.Trans("Phone Number")" class="w-full outline-none rounded-[10px] lg:rounded-[8px] border-[1.5px] border-grey-200 px-5 py-3 lg:px-[15px] lg:py-[10px] text-[16px] lg:text-[15px] font-light leading-150 lg:leading-140 h-[48px] lg:h-[41px]">
                @Html.Raw(errorMessage("Info.Phone"))
            </div>
            <div class="mb-4 form-field">
                <div class="text-[16px] lg:text-[18px] font-normal leading-140 mb-2 lg:mb-[6px]">@output.Trans("Country / Region") <sup class="text-primary-500" style="font-size: 100% !important; top: -2px !important;">*</sup></div>
                <div style="--icon-down: url('@output.ThemeAssetUrl("img/icon-down.svg")')">
                    <select @@changed="(e) => (formdata.Info.Country = e.detail)" placeholder="@output.Trans("Select Country / Region")" class="w-full outline-none rounded-[10px] lg:rounded-[8px] border-[1.5px] border-grey-200 px-5 py-3 lg:px-[15px] lg:py-[10px] text-[16px] lg:text-[15px] font-light leading-150 lg:leading-140 h-[48px] lg:h-[41px]">
                        <option value="">@output.Trans("Select Country / Region")</option>
                        @foreach (var item in output.ThemeOption("Countries.ListOfCountries", false, "contact-form").Split("\n"))
                        {
                            <option value="@item">@output.Trans(item)</option>
                        }
                    </select>
                </div>
                @Html.Raw(errorMessage("Info.Country"))
            </div>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-y-0 gap-x-8">
            <div class="mb-4 form-field">
                <div class="text-[16px] lg:text-[18px] font-normal leading-140 mb-2 lg:mb-[6px]">@output.Trans("Company") <sup class="text-primary-500" style="font-size: 100% !important; top: -2px !important;">*</sup></div>
                <input type="text" x-model="formdata.Info.Company" required placeholder="@output.Trans("Company")" class="w-full outline-none rounded-[10px] lg:rounded-[8px] border-[1.5px] border-grey-200 px-5 py-3 lg:px-[15px] lg:py-[10px] text-[16px] lg:text-[15px] font-light leading-150 lg:leading-140 h-[48px] lg:h-[41px]">
                @Html.Raw(errorMessage("Info.Company"))
            </div>
            <div class="mb-4 form-field">
                <div class="text-[16px] lg:text-[18px] font-normal leading-140 mb-2 lg:mb-[6px]">@output.Trans("Job Title") <sup class="text-primary-500" style="font-size: 100% !important; top: -2px !important;">*</sup></div>
                <input type="text" x-model="formdata.Info.JobTitle" required placeholder="@output.Trans("Job Title")" class="w-full outline-none rounded-[10px] lg:rounded-[8px] border-[1.5px] border-grey-200 px-5 py-3 lg:px-[15px] lg:py-[10px] text-[16px] lg:text-[15px] font-light leading-150 lg:leading-140 h-[48px] lg:h-[41px]">
                @Html.Raw(errorMessage("Info.JobTitle"))
            </div>
        </div>

        <div class="mb-4 form-field">
            <div class="text-[16px] lg:text-[18px] font-normal leading-140 mb-2 lg:mb-[6px]">@output.Trans("Type of Inquiry") <sup class="text-primary-500" style="font-size: 100% !important; top: -2px !important;">*</sup></div>
            <div style="--icon-down: url('@output.ThemeAssetUrl("/img/icon-down.svg")')">
                <select @@changed="(e) => (formdata.Info.TypeOfInquiry = e.detail)" placeholder="@output.Trans("Type of Inquiry")" class="w-full outline-none rounded-[10px] lg:rounded-[8px] border-[1.5px] border-grey-200 px-5 py-3 lg:px-[15px] lg:py-[10px] text-[16px] lg:text-[15px] font-light leading-150 lg:leading-140 h-[48px] lg:h-[41px]">
                    <option value="">@output.Trans("Type of Inquiry")</option>
                    @foreach (var item in output.ThemeOptionArray("TypeOfInquiry.Items", "contact-form"))
                    {
                        <option value="@output.MetaValue("Code", item.Value)">@output.MetaValue("Name", item.Value, true)</option>
                    }
                </select>
            </div>
            @Html.Raw(errorMessage("Info.TypeOfInquiry"))
        </div>

        <div class="mb-4 form-field">
            <div class="text-[16px] lg:text-[18px] font-normal leading-140 mb-2 lg:mb-[6px]">@output.Trans("Your Message") <sup class="text-primary-500" style="font-size: 100% !important; top: -2px !important;">*</sup></div>
            <textarea x-model="formdata.Info.Message" required placeholder="@output.Trans("Type your message here")" rows="6" class="w-full outline-none rounded-[10px] lg:rounded-[8px] border-[1.5px] border-grey-200 px-5 py-3 lg:px-[15px] lg:py-[10px] text-[16px] lg:text-[15px] font-light leading-150 lg:leading-140"></textarea>
            @Html.Raw(errorMessage("Info.Message"))
        </div>

        <div class="mt-6 lg:mt-[30px] flex flex-col gap-2 lg:gap-3">
            <label class="custom-checkbox cursor-pointer flex flex-row gap-4 lg:gap-3 items-center">
                <div>
                    <input type="checkbox" id="checkbox" class="hidden" @@change="(el) => (el.target.checked ? formdata.Info.Agree.push('agree_data') : formdata.Info.Agree.splice(formdata.Info.Agree.indexOf('agree_data'), 1))">
                    <img src="@output.ThemeAssetUrl("img/icon-uncheck.svg")" class="uncheck w-[20px] h-[20px] lg:w-[18px] lg:h-[18px]">
                    <img src="@output.ThemeAssetUrl("img/icon-checked.svg")" class="checked w-[20px] h-[20px] lg:w-[18px] lg:h-[18px]">
                </div>
                <div class="text-[16px] lg:text-[15px] font-light leading-150 lg:leading-140">
                    @output.Trans("I agree that Hulane collects and stores my data to process this inquiry.") <sup class="text-primary-500" style="font-size: 100% !important; top: -2px !important;">*</sup>
                </div>
            </label>

            <label class="custom-checkbox cursor-pointer flex flex-row gap-4 lg:gap-3 items-center">
                <div>
                    <input type="checkbox" id="checkbox" class="hidden" @@change="(el) => (el.target.checked ? formdata.Info.Agree.push('subscribe_news') : formdata.Info.Agree.splice(formdata.Info.Agree.indexOf('subscribe_news'), 1))">
                    <img src="@output.ThemeAssetUrl("img/icon-uncheck.svg")" class="uncheck w-[20px] h-[20px] lg:w-[18px] lg:h-[18px]">
                    <img src="@output.ThemeAssetUrl("img/icon-checked.svg")" class="checked w-[20px] h-[20px] lg:w-[18px] lg:h-[18px]">
                </div>
                <div class="text-[16px] lg:text-[15px] font-light leading-150 lg:leading-140">
                    @output.Trans("I would like to receive updates about Hulane's products and events.")
                </div>
            </label>

            <div x-show="errors?.Info?.Agree ?? false" style="display: none;">
                <div style="background: #FFECED; color: #ED1C29;" class="rounded-[12px] text-center p-4 lg:p-[18px] text-[16px] lg:text-[15px] font-light leading-150 lg:leading-140">
                    @output.Trans("Please agree to data collection to submit the form.")
                </div>
            </div>
        </div>

        <div class="mt-8 lg:mt-[60px]">
            <div x-show="!success">
                <button type="submit" class="inline-block text-center w-full text-white py-2 px-8 lg:px-8 lg:py-[6px] text-[16px] lg:text-[18px] font-normal leading-140 bg-primary-500 hover:bg-primary-600 transition-colors rounded-full">@output.Trans("Submit Inquiry")</button>
            </div>

            <div x-show="success" style="display: none;">
                <div class="bg-grey-100 rounded-[12px] text-grey-600 text-center p-4 lg:p-[18px] text-[16px] lg:text-[15px] font-light leading-150 lg:leading-140">
                    @output.Trans("Thank you for your inquiry. Our representatives will contact you shortly.")
                </div>
            </div>
        </div>
    </form>
</div>

<style>
    .custom-select ul {
        max-height: 300px !important;
        overflow: auto !important;
    }
</style>